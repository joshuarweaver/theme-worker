{
  "version": 3,
  "sources": ["../../../src/index.js"],
  "sourceRoot": "C:\\Users\\Josh\\Opt_worker\\theme-worker\\.wrangler\\tmp\\deploy-zD9C6O",
  "sourcesContent": ["addEventListener('fetch', event => {\r\n  event.respondWith(handleRequest(event.request))\r\n})\r\n\r\nasync function handleRequest(request) {\r\n  // Mobile detection for responsive image optimization\r\n  const userAgent = request.headers.get(\"user-agent\") || \"\";\r\n  const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|Mobile/i.test(userAgent);\r\n\r\n  // Get original response\r\n  const response = await fetch(request)\r\n  \r\n  // Only modify HTML\r\n  const contentType = response.headers.get('content-type') || ''\r\n  if (!contentType.includes('text/html')) {\r\n    return response\r\n  }\r\n\r\n  // Get HTML content\r\n  let html = await response.text()\r\n  \r\n  // === AGGRESSIVE MOBILE OPTIMIZATION ===\r\n  if (isMobile) {\r\n    // Even more aggressive image downsizing for mobile\r\n    html = html.replace(/\\/size\\/w2000\\//g, \"/size/w600/\");\r\n    html = html.replace(/\\/size\\/w1600\\//g, \"/size/w600/\");\r\n    html = html.replace(/\\/size\\/w1200\\//g, \"/size/w500/\");\r\n    html = html.replace(/\\/size\\/w800\\//g, \"/size/w400/\");\r\n    \r\n    // Remove non-critical images on mobile (like decorative ones)\r\n    html = html.replace(/<img[^>]*class=\"[^\"]*decorative[^\"]*\"[^>]*>/gi, '');\r\n    \r\n    // Defer all non-critical JavaScript on mobile\r\n    html = html.replace(/<script(?![^>]*defer)(?![^>]*async)(?![^>]*data-cfasync=\"false\")([^>]*)>/gi, '<script defer$1>');\r\n    \r\n    // Remove unnecessary elements for mobile\r\n    html = html.replace(/<div[^>]*class=\"[^\"]*desktop-only[^\"]*\"[^>]*>.*?<\\/div>/gis, '');\r\n  }\r\n  \r\n  // === IMAGE OPTIMIZATION FEATURES ===\r\n  // Inject lazy loading and decoding on all <img> tags\r\n  html = html.replace(/<img\\b([^>]*?)>/gi, (match, attrs) => {\r\n    if (attrs.includes(\"loading=\")) return match; // skip if already optimized\r\n\r\n    const hasFetchPriority = attrs.includes(\"fetchpriority=\");\r\n    const lazyAttrs = `loading=\"lazy\" decoding=\"async\"${hasFetchPriority ? \"\" : \" fetchpriority=\\\"low\\\"\"}`;\r\n\r\n    return `<img ${attrs} ${lazyAttrs}>`;\r\n  });\r\n\r\n  // Upgrade first image to fetchpriority=\"high\" (assume it's LCP)\r\n  html = html.replace(/<img([^>]+?)fetchpriority=\"low\"/i, (match, attrs) => {\r\n    return `<img${attrs}fetchpriority=\"high\"`;\r\n  });\r\n\r\n  // Add viewport meta tag if missing (important for mobile CWV)\r\n  if (!html.includes('name=\"viewport\"')) {\r\n    const viewportTag = '\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">';\r\n    html = html.replace(/<head>/i, `<head>${viewportTag}`);\r\n  }\r\n\r\n  // === CRITICAL CSS INLINING FOR MOBILE ===\r\n  if (isMobile) {\r\n    const criticalMobileCSS = `\r\n<style>\r\n/* Critical Mobile-First CSS - Inlined for instant rendering */\r\nbody { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }\r\nimg { max-width: 100%; height: auto; }\r\n.header, .nav { display: none !important; } /* Hide complex navigation on mobile */\r\n.post-content, .content { padding: 10px !important; }\r\nh1, h2, h3 { font-size: 1.5em !important; line-height: 1.3 !important; }\r\np { font-size: 16px !important; line-height: 1.4 !important; }\r\n/* Minimal critical styles only */\r\n</style>`;\r\n    html = html.replace(/<head>/i, `<head>${criticalMobileCSS}`);\r\n  }\r\n\r\n  // Optimize CSS delivery - but be careful with worker-served CSS\r\n  html = html.replace(\r\n    /<link([^>]+)rel=[\"']stylesheet[\"']([^>]+)>/gi, \r\n    (match, beforeRel, afterRel) => {\r\n      // Skip if already optimized, is critical CSS, or contains worker-like patterns\r\n      if (match.includes('media=') || \r\n          match.includes('critical') || \r\n          match.includes('above-fold') ||\r\n          match.includes('/_worker') ||\r\n          match.includes('/workers/') ||\r\n          afterRel.includes('/_worker') ||\r\n          afterRel.includes('/workers/') ||\r\n          beforeRel.includes('/_worker') ||\r\n          beforeRel.includes('/workers/') ||\r\n          match.includes('fontshare.com')) { // Don't optimize your font loading\r\n        return match;\r\n      }\r\n      \r\n      // Also skip if the URL looks like it might be worker-served (no file extension or special patterns)\r\n      const hrefMatch = match.match(/href=[\"']([^\"']+)[\"']/);\r\n      if (hrefMatch) {\r\n        const href = hrefMatch[1];\r\n        // Skip if no extension, or looks like a worker path\r\n        if (!href.includes('.css') || \r\n            href.startsWith('/_') || \r\n            href.includes('/api/') ||\r\n            href.includes('/edge/')) {\r\n          return match;\r\n        }\r\n      }\r\n      \r\n      return `<link${beforeRel}rel=\"preload\"${afterRel} as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\">\r\n<noscript><link${beforeRel}rel=\"stylesheet\"${afterRel}></noscript>`;\r\n    }\r\n  );\r\n  // === END IMAGE OPTIMIZATION FEATURES ===\r\n  \r\n  // === ADDITIONAL MOBILE PERFORMANCE OPTIMIZATIONS ===\r\n  if (isMobile) {\r\n    // Simple HTML optimization for mobile - just remove extra whitespace\r\n    html = html.replace(/\\n\\s+/g, '\\n'); // Reduce indentation whitespace\r\n    \r\n    // Preload critical resources for mobile\r\n    const criticalPreloads = `\r\n<link rel=\"preload\" as=\"font\" href=\"https://api.fontshare.com/v2/css?f[]=satoshi@1,2\" crossorigin>\r\n`;\r\n    html = html.replace(/<head>/i, `<head>${criticalPreloads}`);\r\n  }\r\n\r\n  // Check if it's a post page (for progress bar)\r\n  const isPostPage = html.includes('post-content') || html.includes('post-full-content')\r\n  \r\n  // Create optimized injection\r\n  const optimizedInjection = `\r\n\r\n<link rel=\"preconnect\" href=\"https://api.fontshare.com\" crossorigin>\r\n<link href=\"https://api.fontshare.com/v2/css?f[]=satoshi@1,2&display=swap\" rel=\"stylesheet\">\r\n\r\n<style>\r\n/* Responsive Image Optimization */\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n${isMobile ? `\r\n/* Mobile-Optimized Styles */\r\n* {\r\n  font-display: swap !important;\r\n}\r\nbody {\r\n  font-size: 16px !important;\r\n  line-height: 1.4 !important;\r\n}\r\n.logo__title {\r\n  font-size: 2rem !important;\r\n}\r\nfooter .logo__title {\r\n  font-size: 2.5rem !important;\r\n}\r\n/* Simplified mobile layout */\r\n.project-header__wrapper,\r\n.page-header__wrapper {\r\n  padding: 10px !important;\r\n  gap: 10px !important;\r\n}\r\n` : ''}\r\n\r\n/* Core Styles - Combined & Optimized */\r\n.logo__title, footer .logo__title {\r\n  font-family: 'Satoshi', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;\r\n  font-weight: 700 !important;\r\n  text-transform: uppercase;\r\n}\r\n.logo__title {\r\n  font-size: 2.6rem;\r\n}\r\nfooter .logo__title {\r\n  font-size: 3.4rem;\r\n}\r\n.footer__description {\r\n  font-size: 1.6rem;\r\n  max-width: 360px;\r\n}\r\n.footer {\r\n  position: relative;\r\n  background: linear-gradient(to bottom, rgba(240, 247, 250, 0.95) 0%, rgba(225, 235, 240, 0.98) 100%);\r\n  backdrop-filter: blur(10px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  color: #4a5568;\r\n  box-shadow: 0 4px 30px rgba(0, 0, 0, .05);\r\n  border: 1px solid hsla(0, 0%, 100%, .3);\r\n}\r\n.footer__header.wrapper {\r\n  padding-top: 20px;\r\n  padding-bottom: 50px;\r\n}\r\n.post-content {\r\n  margin-left: 0px !important;\r\n}\r\n.author-card__info {\r\n  display: none;\r\n}\r\n\r\n/* Project & Post Styles */\r\n.project-header, .page-header, .post-header {\r\n  background: linear-gradient(to bottom, rgba(240, 244, 248, 0.95) 0%, rgba(220, 228, 236, 0.98) 100%);\r\n  backdrop-filter: blur(10px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  color: #2c3e50;\r\n  box-shadow: 0 4px 30px rgba(0, 0, 0, .05);\r\n  border: 1px solid hsla(0, 0%, 100%, .3);\r\n}\r\nhtml[data-theme='dark'] .project-header,\r\nhtml[data-theme='dark'] .page-header,\r\nhtml[data-theme='dark'] .post-header {\r\n  background: linear-gradient(to bottom, rgba(22, 17, 12, 0.95) 0%, rgba(36, 28, 21, 0.98) 100%);\r\n  color: #e6ddd6;\r\n  box-shadow: 0 4px 30px rgba(0, 0, 0, .15);\r\n  border: 1px solid hsla(0, 0%, 20%, .3);\r\n}\r\n.project-header__wrapper {\r\n  gap: 25px;\r\n}\r\n.project-header__img-wrapper {\r\n  padding: 20px;\r\n}\r\n.project-header__img {\r\n  border-radius: 20px;\r\n}\r\n.project-header__img--featured {\r\n  border-radius: 0px !important;\r\n  transform: scale(1.06) !important;\r\n}\r\n.post-card__img-wrapper {\r\n  display: none;\r\n}\r\n.page-header__wrapper {justify-content: center !important;\r\n}\r\n.section-title__title-text {\r\n  font-size: 2.5rem;\r\n}\r\n\r\n.post-footer  html[data-theme='light'] & {background-color: #ffffff !important; padding: 30px !important;}\r\n.progress-bar {background-color: #ffffff !important}\r\n\r\n.post-footer html[data-theme='dark'] & {background-color: #E6DDD6 !important;}\r\n.progress-bar html[data-theme='dark'] & {background-color: #211A14 !important;}\r\n\r\n.post-content {padding-bottom: 6rem !important;}\r\n\r\n/* Home Page & Layout */\r\n.home-page {\r\n  gap: 0px !important;\r\n}\r\n.page-header__wrapper {\r\n  justify-content: center;\r\n}\r\n.featured-thought__wrapper {\r\n  padding-top: 75px;\r\n}\r\n.post-page, .project-page {\r\n  gap: 60px !important;\r\n}\r\n.post {width:100% !important; margin-left: 0px !important; padding-top: 0px !important;\r\n}\r\n.post-card__img-wrapper {display: none !important;\r\n}\r\n.post-footer__meta, .progress-bar-main__share {color: #212121 !important;\r\n}\r\n.value-props-section, .skillset-section {\r\n  padding-top: 0px !important;\r\n}\r\n.skillset-section {\r\n  padding-top: 9rem !important;\r\n}\r\n.featured-thought-section {\r\n  margin-bottom: 0px !important;\r\n}\r\n\r\n/* Membership & Cards */\r\n.skillset-item {\r\n  max-width: 100% !important;\r\n  padding: 5px !important;\r\n}\r\n.membership-module-section__description {\r\n  font-size: 2.2rem !important;\r\n}\r\n.membership-tier-card__description {\r\n  font-size: 1.5rem;\r\n}\r\n.membership-tier-card__benefit {\r\n  font-size: 1.3rem;\r\n}\r\n.membership-tier-card__button {\r\n  font-size: 2rem !important;\r\n}\r\n.membership-tier-card__popular {\r\n  font-size: 1.3rem;\r\n}\r\n.membership-tier-card__price-per {\r\n  font-size: 1.3rem;\r\n}\r\n.membership-toggle-wrapper {\r\n  display: none !important;\r\n}\r\n.value-prop-card .button {\r\n  font-size: 1.4rem !important;\r\n}\r\n.logo-soup-section__item {\r\n  gap: 10px !important;\r\n}\r\n\r\n/* Blog & Content */\r\n.latest-thought-list__date::before,\r\n.latest-thought-list__reading-time::before {\r\n  display: none;\r\n}\r\n.latest-thought-list__date:not(:first-child),\r\n.latest-thought-list__reading-time:not(:first-child) {\r\n  padding-left: 0px;\r\n}\r\n.featured-thought__button a::hover {\r\n  color: #000000 !important;\r\n}\r\n.kg-callout-text {\r\n  font-size: 2.3rem !important;\r\n}\r\n.reading-progress {\r\n  display: none !important;\r\n}\r\n\r\n/* TOC Styles */\r\n.toc-container {\r\n  max-height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n  overflow: auto;\r\n}\r\nhtml[data-theme='dark'] .toc-container {\r\n  color: #E6DDD6;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n}\r\n.toc-title {\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n  background-color: #f9f4f4 !important;\r\n  padding: 15px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  border-bottom: 1px solid #eee;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\nhtml[data-theme='dark'] .toc-title {\r\n  background-color: #211A14 !important;\r\n  border-bottom: 1px solid #2D2319;\r\n  color: #F0E9E4;\r\n}\r\n.toc-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  height: 500px;\r\n  padding: 0 15px;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\nhtml[data-theme='dark'] .toc-list {\r\n  background-color: #16110C;\r\n}\r\n.toc-list a {\r\n  display: block;\r\n  padding: 8px 10px;\r\n  text-decoration: none;\r\n  color: inherit;\r\n  border-radius: 5px !important;\r\n  transition: all 0.2s ease;\r\n}\r\nhtml[data-theme='dark'] .toc-list a {\r\n  color: #C4B8B0 !important;\r\n}\r\n.toc-list a.active {\r\n  background-color: rgba(0,0,0,0.05);\r\n  font-weight: bold;\r\n}\r\nhtml[data-theme='dark'] .toc-list a.active {\r\n  background-color: #2D2319;\r\n  color: #FFFFFF !important;\r\n}\r\n.toc-list a:hover {\r\n  background-color: rgba(0,0,0,0.02);\r\n}\r\nhtml[data-theme='dark'] .toc-list a:hover {\r\n  background-color: #241C15;\r\n  color: #E6DDD6;\r\n}\r\n.toc-list::-webkit-scrollbar {\r\n  width: 4px;\r\n  display: block !important;\r\n}\r\n.toc-list::-webkit-scrollbar-thumb {\r\n  background: rgba(0,0,0,0.1);\r\n  border-radius: 4px;\r\n}\r\nhtml[data-theme='dark'] .toc-list::-webkit-scrollbar-thumb {\r\n  background: #3A2E24;\r\n}\r\nhtml[data-theme='dark'] .toc-list::-webkit-scrollbar-track {\r\n  background: #1E1713;\r\n}\r\n\r\n/* Progress Bar */\r\n.post-progress-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 6px;\r\n  z-index: 1000;\r\n  background: rgba(220, 228, 236, 0.4);\r\n  backdrop-filter: blur(4px);\r\n}\r\n.post-progress-bar {\r\n  height: 100%;\r\n  width: 0;\r\n  background: #2c3e50;\r\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.1);\r\n  transition: width 0.2s ease-out;\r\n  animation: progressGlow 3s infinite;\r\n}\r\n@keyframes progressGlow {\r\n  0% { box-shadow: 0 1px 8px rgba(0, 0, 0, 0.1); }\r\n  50% { box-shadow: 0 1px 12px rgba(120, 140, 180, 0.2); }\r\n  100% { box-shadow: 0 1px 8px rgba(0, 0, 0, 0.1); }\r\n}\r\n</style>\r\n\r\n<script data-cfasync=\"false\">\r\n// Fixed TOC Scroller and Progress Bar\r\n(function() {\r\n  // Initialize when DOM is ready\r\n  function init() {\r\n    // Only add progress bar on post pages\r\n    ${isPostPage ? `\r\n    // Create progress bar\r\n    const progressContainer = document.createElement('div');\r\n    progressContainer.className = 'post-progress-container';\r\n    \r\n    const progressBar = document.createElement('div');\r\n    progressBar.className = 'post-progress-bar';\r\n    \r\n    progressContainer.appendChild(progressBar);\r\n    document.body.appendChild(progressContainer);\r\n    \r\n    // Track post content for progress calculation\r\n    const postContent = document.querySelector('.post-content, .post-full-content');\r\n    \r\n    // Calculate and update progress\r\n    function updateProgress() {\r\n      if (postContent) {\r\n        const postHeight = postContent.offsetHeight;\r\n        const scrollPosition = window.scrollY;\r\n        const windowHeight = window.innerHeight;\r\n        const contentOffset = postContent.offsetTop;\r\n        \r\n        const scrollableDistance = postHeight - windowHeight;\r\n        const currentPosition = scrollPosition - contentOffset;\r\n        \r\n        let percentage = (currentPosition / scrollableDistance) * 100;\r\n        percentage = Math.min(100, Math.max(0, percentage));\r\n        \r\n        progressBar.style.width = percentage + '%';\r\n      }\r\n    }\r\n    \r\n    // Update progress on scroll\r\n    window.addEventListener('scroll', function() {\r\n      requestAnimationFrame(updateProgress);\r\n    });\r\n    window.addEventListener('resize', updateProgress);\r\n    \r\n    // Initial update\r\n    updateProgress();\r\n    ` : ''}\r\n    \r\n    // TOC functionality with more robust handling\r\n    function initTOCScroller() {\r\n      const tocContainer = document.querySelector('.toc-container');\r\n      const tocList = document.querySelector('.toc-list');\r\n      const tocLinks = Array.from(document.querySelectorAll('.toc-list a'));\r\n      \r\n      if (!tocContainer || !tocList || tocLinks.length === 0) {\r\n        // If TOC isn't ready yet, try again later\r\n        setTimeout(initTOCScroller, 500);\r\n        return;\r\n      }\r\n      \r\n      let currentActiveLink = null;\r\n      \r\n      // Function to scroll TOC to active link\r\n      function scrollToLink(link) {\r\n        if (!link) return;\r\n        \r\n        const linkRect = link.getBoundingClientRect();\r\n        const tocRect = tocList.getBoundingClientRect();\r\n        const linkTop = link.offsetTop;\r\n        \r\n        const targetScroll = linkTop - (tocRect.height / 2) + (linkRect.height / 2);\r\n        \r\n        // Force scroll to link position\r\n        tocList.scrollTop = targetScroll;\r\n        try {\r\n          tocList.scroll({\r\n            top: targetScroll,\r\n            behavior: 'smooth'\r\n          });\r\n        } catch (e) {\r\n          tocList.scrollTop = targetScroll;\r\n        }\r\n      }\r\n      \r\n      // Function to update active link in TOC\r\n      function updateActiveLink() {\r\n        // Use this instead of window.scrollY to handle more browsers\r\n        const scrollY = window.pageYOffset || document.documentElement.scrollTop;\r\n        \r\n        // Get all section elements \r\n        const sections = Array.from(document.querySelectorAll('h2, h3, h4'));\r\n        \r\n        if (sections.length === 0) return;\r\n        \r\n        // Find the current section\r\n        let currentSection = null;\r\n        let minDistance = Infinity;\r\n        \r\n        sections.forEach(section => {\r\n          // Get absolute position relative to document\r\n          const sectionTop = section.getBoundingClientRect().top + scrollY;\r\n          // Calculate distance from viewport top + 100px offset\r\n          const distance = Math.abs(sectionTop - scrollY - 100);\r\n          \r\n          if (distance < minDistance) {\r\n            minDistance = distance;\r\n            currentSection = section;\r\n          }\r\n        });\r\n        \r\n        // Find the link corresponding to the current section\r\n        if (currentSection) {\r\n          const sectionId = currentSection.getAttribute('id');\r\n          if (!sectionId) return;\r\n          \r\n          const matchingLink = tocLinks.find(link => \r\n            link.getAttribute('href') === '#' + sectionId\r\n          );\r\n          \r\n          if (matchingLink && matchingLink !== currentActiveLink) {\r\n            // Clear previous active\r\n            tocLinks.forEach(link => link.classList.remove('active'));\r\n            \r\n            // Set new active\r\n            matchingLink.classList.add('active');\r\n            currentActiveLink = matchingLink;\r\n            \r\n            // Scroll TOC to show this link\r\n            scrollToLink(matchingLink);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Handle clicks on TOC links\r\n      tocLinks.forEach(link => {\r\n        link.addEventListener('click', function(e) {\r\n          // Small delay to let browser navigate to anchor\r\n          setTimeout(() => scrollToLink(link), 100);\r\n        });\r\n      });\r\n      \r\n      // Use passive event for better performance\r\n      window.addEventListener('scroll', function() {\r\n        // Debounce for performance but not too much to feel unresponsive\r\n        if (scrollTimeout) clearTimeout(scrollTimeout);\r\n        scrollTimeout = setTimeout(updateActiveLink, 50);\r\n      }, { passive: true });\r\n      \r\n      window.addEventListener('resize', function() {\r\n        if (resizeTimeout) clearTimeout(resizeTimeout);\r\n        resizeTimeout = setTimeout(updateActiveLink, 100);\r\n      }, { passive: true });\r\n      \r\n      // Initial update\r\n      updateActiveLink();\r\n      \r\n      // Also run periodically as a safety net\r\n      // This helps with dynamic content or late-loading elements\r\n      const periodicUpdate = setInterval(updateActiveLink, 1000);\r\n      \r\n      // Stop the interval after 30 seconds to save resources\r\n      setTimeout(() => clearInterval(periodicUpdate), 30000);\r\n    }\r\n    \r\n    // Debounce variables\r\n    let scrollTimeout;\r\n    let resizeTimeout;\r\n    \r\n    // Try initializing right away\r\n    initTOCScroller();\r\n    \r\n    // Also try after a longer delay (for slow loading sites)\r\n    setTimeout(initTOCScroller, 1000);\r\n    setTimeout(initTOCScroller, 3000);\r\n  }\r\n  \r\n  // Run init when DOM is ready\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', init);\r\n  } else {\r\n    init();\r\n  }\r\n  \r\n  // Also run on load as a failsafe\r\n  window.addEventListener('load', init);\r\n})();\r\n</script>\r\n`\r\n\r\n  // Insert optimized injection before </head>\r\n  if (html.includes('</head>')) {\r\n    html = html.replace('</head>', optimizedInjection + '</head>')\r\n  }\r\n  \r\n  // Create new response with enhanced headers for better performance\r\n  const optimizedResponse = new Response(html, {\r\n    status: response.status,\r\n    statusText: response.statusText,\r\n    headers: new Headers(response.headers)\r\n  })\r\n\r\n  // Add performance headers for better Core Web Vitals\r\n  optimizedResponse.headers.set('Cache-Control', 'public, max-age=3600, must-revalidate')\r\n  optimizedResponse.headers.set('X-Content-Type-Options', 'nosniff')\r\n  optimizedResponse.headers.set('X-Frame-Options', 'DENY')\r\n  optimizedResponse.headers.set('X-XSS-Protection', '1; mode=block')\r\n  \r\n  return optimizedResponse\r\n}\r\n"],
  "mappings": ";;;;;AAAA,mBAAiB,SAAS,WAAS;AACjC,UAAM,YAAY,cAAc,MAAM,OAAO,CAAC;AAAA,EAChD,CAAC;AAED,iBAAe,cAAc,SAAS;AAEpC,UAAM,YAAY,QAAQ,QAAQ,IAAI,YAAY,KAAK;AACvD,UAAM,WAAW,8CAA8C,KAAK,SAAS;AAG7E,UAAM,WAAW,MAAM,MAAM,OAAO;AAGpC,UAAM,cAAc,SAAS,QAAQ,IAAI,cAAc,KAAK;AAC5D,QAAI,CAAC,YAAY,SAAS,WAAW,GAAG;AACtC,aAAO;AAAA,IACT;AAGA,QAAI,OAAO,MAAM,SAAS,KAAK;AAG/B,QAAI,UAAU;AAEZ,aAAO,KAAK,QAAQ,oBAAoB,aAAa;AACrD,aAAO,KAAK,QAAQ,oBAAoB,aAAa;AACrD,aAAO,KAAK,QAAQ,oBAAoB,aAAa;AACrD,aAAO,KAAK,QAAQ,mBAAmB,aAAa;AAGpD,aAAO,KAAK,QAAQ,iDAAiD,EAAE;AAGvE,aAAO,KAAK,QAAQ,8EAA8E,kBAAkB;AAGpH,aAAO,KAAK,QAAQ,8DAA8D,EAAE;AAAA,IACtF;AAIA,WAAO,KAAK,QAAQ,qBAAqB,CAAC,OAAO,UAAU;AACzD,UAAI,MAAM,SAAS,UAAU,EAAG,QAAO;AAEvC,YAAM,mBAAmB,MAAM,SAAS,gBAAgB;AACxD,YAAM,YAAY,kCAAkC,mBAAmB,KAAK,sBAAwB;AAEpG,aAAO,QAAQ,KAAK,IAAI,SAAS;AAAA,IACnC,CAAC;AAGD,WAAO,KAAK,QAAQ,oCAAoC,CAAC,OAAO,UAAU;AACxE,aAAO,OAAO,KAAK;AAAA,IACrB,CAAC;AAGD,QAAI,CAAC,KAAK,SAAS,iBAAiB,GAAG;AACrC,YAAM,cAAc;AACpB,aAAO,KAAK,QAAQ,WAAW,SAAS,WAAW,EAAE;AAAA,IACvD;AAGA,QAAI,UAAU;AACZ,YAAM,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW1B,aAAO,KAAK,QAAQ,WAAW,SAAS,iBAAiB,EAAE;AAAA,IAC7D;AAGA,WAAO,KAAK;AAAA,MACV;AAAA,MACA,CAAC,OAAO,WAAW,aAAa;AAE9B,YAAI,MAAM,SAAS,QAAQ,KACvB,MAAM,SAAS,UAAU,KACzB,MAAM,SAAS,YAAY,KAC3B,MAAM,SAAS,UAAU,KACzB,MAAM,SAAS,WAAW,KAC1B,SAAS,SAAS,UAAU,KAC5B,SAAS,SAAS,WAAW,KAC7B,UAAU,SAAS,UAAU,KAC7B,UAAU,SAAS,WAAW,KAC9B,MAAM,SAAS,eAAe,GAAG;AACnC,iBAAO;AAAA,QACT;AAGA,cAAM,YAAY,MAAM,MAAM,uBAAuB;AACrD,YAAI,WAAW;AACb,gBAAM,OAAO,UAAU,CAAC;AAExB,cAAI,CAAC,KAAK,SAAS,MAAM,KACrB,KAAK,WAAW,IAAI,KACpB,KAAK,SAAS,OAAO,KACrB,KAAK,SAAS,QAAQ,GAAG;AAC3B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO,QAAQ,SAAS,gBAAgB,QAAQ;AAAA,iBACrC,SAAS,mBAAmB,QAAQ;AAAA,MACjD;AAAA,IACF;AAIA,QAAI,UAAU;AAEZ,aAAO,KAAK,QAAQ,UAAU,IAAI;AAGlC,YAAM,mBAAmB;AAAA;AAAA;AAGzB,aAAO,KAAK,QAAQ,WAAW,SAAS,gBAAgB,EAAE;AAAA,IAC5D;AAGA,UAAM,aAAa,KAAK,SAAS,cAAc,KAAK,KAAK,SAAS,mBAAmB;AAGrF,UAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAY3B,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqaAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAwgJR,QAAI,KAAK,SAAS,SAAS,GAAG;AAC5B,aAAO,KAAK,QAAQ,WAAW,qBAAqB,SAAS;AAAA,IAC/D;AAGA,UAAM,oBAAoB,IAAI,SAAS,MAAM;AAAA,MAC3C,QAAQ,SAAS;AAAA,MACjB,YAAY,SAAS;AAAA,MACrB,SAAS,IAAI,QAAQ,SAAS,OAAO;AAAA,IACvC,CAAC;AAGD,sBAAkB,QAAQ,IAAI,iBAAiB,uCAAuC;AACtF,sBAAkB,QAAQ,IAAI,0BAA0B,SAAS;AACjE,sBAAkB,QAAQ,IAAI,mBAAmB,MAAM;AACvD,sBAAkB,QAAQ,IAAI,oBAAoB,eAAe;AAEjE,WAAO;AAAA,EACT;AAnoBe;",
  "names": []
}
